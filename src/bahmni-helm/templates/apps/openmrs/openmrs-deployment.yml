{{ if .Values.apps }}{{ if .Values.apps.openmrs }} {{ if .Values.apps.openmrs.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: openmrs
spec:
  selector:
    matchLabels:
      app: openmrs
  template:
    metadata:
      labels:
        app: openmrs
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
              - key: "node-role.kubernetes.io/master"
                operator: NotIn
                values:
                - "true"
      volumes:
        - name: openmrs-props
          configMap:
            name: openmrs-props
        - name: openmrs-db
          configMap:
            name: openmrs-db-script
        - name: distro
          persistentVolumeClaim:
            claimName: distro-pvc
        - name: data
          persistentVolumeClaim:
            claimName: data-pvc
      initContainers:
        - name: init-db
          image: "{{ .Values.docker_registry }}/{{ .Values.apps.openmrs.initImage }}"
          volumeMounts:
            - name: openmrs-db
              mountPath: "/mnt/"
          command: ['sh', '-c', "bash /mnt/create_openmrs_db.sh"]
          env:
            - name: OPENMRS_DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: openmrs-configs
                  key: OPENMRS_DB_HOST
            - name: MYSQL_ROOT_USER
              valueFrom:
                configMapKeyRef:
                  name: mysql-configs
                  key: MYSQL_ROOT_USER
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: mysql-configs
                  key: MYSQL_ROOT_PASSWORD
            - name: OPENMRS_DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: openmrs-configs
                  key: OPENMRS_DB_NAME
            - name: OPENMRS_DB_USER
              valueFrom:
                configMapKeyRef:
                  name: openmrs-configs
                  key: OPENMRS_DB_USER
            - name: OPENMRS_DB_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: openmrs-configs
                  key: OPENMRS_DB_PASSWORD
      priorityClassName: high-priority
      containers:
      - name: openmrs
        image: "{{ .Values.docker_registry }}/{{ .Values.apps.openmrs.image }}"
        resources:
            requests:
              memory: "{{  .Values.apps.openmrs.resources.requests.memory }}"
              cpu: "{{ .Values.apps.openmrs.resources.requests.cpu }}"
        volumeMounts:
            - name: distro
              subPath: "openmrs_modules/"
              mountPath: "/usr/local/tomcat/.OpenMRS/modules"
            - name: distro
              mountPath: "/usr/local/tomcat/.OpenMRS/configuration"
              subPath: "openmrs_config/"
            - name: openmrs-props
              mountPath: "/etc/properties"
            - name: data
              subPath: "openmrs/bahmni_filestore"
              mountPath: "/usr/local/tomcat/.OpenMRS/bahmni_filestore"
            - name: data
              subPath: "openmrs/configuration_checksums"
              mountPath: "/usr/local/tomcat/.OpenMRS/configuration_checksums/"
            - name: data
              subPath: "openmrs/lucene"
              mountPath: "/usr/local/tomcat/.OpenMRS/lucene/"
            - name: data
              subPath: "openmrs/activemq-data"
              mountPath: "/usr/local/tomcat/.OpenMRS/activemq-data/"
            - name: distro
              subPath: "openmrs_owa/"
              mountPath: "/usr/local/tomcat/.OpenMRS/owa/"
            - name: data
              subPath: "openmrs/bahmni"
              mountPath: "/home/bahmni/"
        ports:
        - name: openmrs-port
          containerPort: 8080
        startupProbe:
          httpGet:
            path: /openmrs
            port: openmrs-port
          failureThreshold: 180
          periodSeconds: 20
        livenessProbe:
          httpGet:
            path: /openmrs
            port: openmrs-port
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /openmrs
            port: openmrs-port
          initialDelaySeconds: 5
          periodSeconds: 10
        env:
          - name: MODULE_WEB_ADMIN
            value: "true"
          - name: DB_AUTO_UPDATE
            value: "true"
          - name: DB_CREATE_TABLES
            value: "true"
          - name: DB_HOST
            valueFrom:
              configMapKeyRef:
                name: openmrs-configs
                key: OPENMRS_DB_HOST
          - name: DB_DATABASE
            valueFrom:
              configMapKeyRef:
                name: openmrs-configs
                key: OPENMRS_DB_NAME
          - name: DB_USERNAME
            valueFrom:
              configMapKeyRef:
                name: openmrs-configs
                key: OPENMRS_DB_USER
          - name: DB_PASSWORD
            valueFrom:
              configMapKeyRef:
                name: openmrs-configs
                key: OPENMRS_DB_PASSWORD
      
{{ end }}{{ end }}{{ end }}
