isAppliance: true
selectDbHost: true
rwxStorageClass: mekom-nfs
postgresLocalPath: /mnt/disks/ssd1/data/postgresql
mysqlLocalPath: /mnt/disks/ssd1/data/mysql
databaseHostRole: database
docker_registry: docker.io
apps:
  updatebox:
    image: mdlh/alpine-rsync:3.11-3.1-1
  appointments:
    enabled: false
    image: mekomsolutions/appointments:145a9e3
    resources:
      requests:
        cpu: "0.5"
        memory: "100Mi"
  bahmni_config:
    image: nginx:1.19.10-alpine
    enabled: false
    resources:
      requests:
        cpu: "0.5"
        memory: "100Mi"
  bahmni_filestore:
    image: nginx:1.19.10-alpine
    enabled: false
    resources:
      requests:
        cpu: "0.5"
        memory: "100Mi"
  backup_services:
    schedule: "*/15 * * * *"
    storage:
      storageClass: mekom-nfs
      accessMode: ReadWriteMany
      size: 2Gi
      annotations: {}
      nodeAffinity:
        required:
          nodeSelectorTerms:
          - matchExpressions:
            - key: role
              operator: In
              values:
              - database
    localPath: /mnt/disks/ssd1/backup/
    nodeSelector:
          role: database
    enabled: true
    apps:
      mysql:
        image: mekomsolutions/mysql_backup:9ab7a24
      postgres:
        image: mekomsolutions/postgres_backup:9ab7a24
      filestore:
        image: mekomsolutions/filestore_backup:9ab7a24

  bahmni_mart:
    initImage: postgres:9.6-alpine
    image: mekomsolutions/bahmni-mart:145a9e3
    enabled: false
    ANALYTICS_DB_HOST: postgres
    ANALYTICS_DB_NAME: analytics
    ANALYTICS_DB_PASSWORD: password
    ANALYTICS_DB_USER: analytics
    CRON_TIME: "0/5 * * * *"
    resources:
      requests:
        cpu: "0.5"
        memory: "256Mi"
  bahmni_reports:
    image: mekomsolutions/bahmni-reports:145a9e3
    enabled: false
    resources:
      requests:
        cpu: "0.5"
        memory: "100Mi"
  bahmniapps:
    image: mekomsolutions/bahmniapps:145a9e3
    enabled: false
    resources:
      requests:
        cpu: "0.5"
        memory: "100Mi"
  implementer_interface:
    image: mekomsolutions/implementer-interface:145a9e3
    enabled: false
    resources:
      requests:
        cpu: "0.5"
        memory: "100Mi"
  metabase:
    initImage: postgres:9.6-alpine
    image: mekomsolutions/metabase:145a9e3
    enabled: false
    METABASE_DB_NAME: metabase
    METABASE_DB_PASSWORD: metabase
    METABASE_DB_USER: metabase
    resources:
      requests:
        cpu: "0.5"
        memory: "256Mi"
    service:
      loadBalancerIP: ''
      port: 3000
  mysql:
    image: mariadb:10.3
    enabled: false
    MYSQL_ROOT_USER: root
    MYSQL_ROOT_PASSWORD: password
    resources:
      requests:
        cpu: "0.5"
        memory: "256Mi"
    nodeSelector:
        role: database
    storage:
      storageClass: mekom-nfs
      accessMode: ReadWriteOnce
      size: 2Gi
      annotations: {}
      nodeAffinity:
        required:
          nodeSelectorTerms:
          - matchExpressions:
            - key: role
              operator: In
              values:
              - database
  odoo:
    initImage: postgres:9.6-alpine
    image: mekomsolutions/odoo:2c1706f
    enabled: false
    ODOO_DB_USER: odoo
    ODOO_PORT: 80
    ODOO_DB_PASSWORD: password
    ODOO_DB_NAME: odoo
    ODOO_HOST: odoo
    ODOO_USER: admin
    ODOO_PASSWORD: admin
    ODOO_MASTER_PASSWORD: password
    ODOO_PUBLIC_PORT: "8069"
    ODOO_EXTRA_ADDONS: odoo_addons
    ODOO_CONFIG_PATH: odoo_config
    resources:
      requests:
        cpu: "1"
        memory: "1024Mi"
    service:
      loadBalancerIP: ''
      port: 80
  eip_client:
    image: mekomsolutions/eip-client:544f084
    initImage: mariadb:10.3
    enabled: false
    MYSQL_DATABASE: openmrs
    MYSQL_USER: ${OPENMRS_DB_USER}
    MYSQL_PASSWORD: ${OPENMRS_DB_PASSWORD}
    MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    DB_HOST: mysql
    DB_DATABASE: openmrs
    OPENMRS_URL: http://openmrs:8080
    ODOO_URL: http://odoo:8069
    ODOO_DATABASE: odoo
    ODOO_USER: ${ODOO_USER}
    ODOO_PASSWORD: ${ODOO_PASSWORD}
    OPENMRS_DB_HOST: mysql
    OPENMRS_DB_PORT: 3306
    OPENMRS_DB_NAME: openmrs
    OPENMRS_DB_USER: ${OPENMRS_DB_USER}
    OPENMRS_DB_PASSWORD: ${OPENMRS_DB_PASSWORD}
    OPENMRS_USER: ${OPENMRS_USER}
    OPENMRS_PASSWORD: ${OPENMRS_PASSWORD}
    MYSQL_ADMIN_USER: root
    MYSQL_ADMIN_USER_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    SPRING_MNGT_USER: ${EIP_SPRING_USER:-name}
    SPRING_MNGT_PASSWORD: ${EIP_SPRING_PASSWORD:-password}
    EIP_DB_NAME: ${EIP_DB_NAME}
    EIP_DB_USER: ${EIP_DB_USER}
    EIP_DB_PASSWORD: ${EIP_DB_PASSWORD}
    EIP_DB_HOST: mysql
    EIP_DB_PORT: 3306
  openelis:
    image: mekomsolutions/openelis:145a9e3
    initImage: enyachoke/openelis-init:5b1f024
    loggingImage: busybox:1.33.1
    enabled: false
    OPENELIS_DB_USER: clinlims
    OPENELIS_DB_PASSWORD: clinlims
    OPENELIS_DB_NAME: clinlims
    OPENELIS_ATOMFEED_USER: atomfeed
    OPENELIS_ATOMFEED_PASSWORD: AdminadMIN*
    OPENELIS_DB_HOST: postgres
    resources:
      requests:
        cpu: "0.5"
        memory: "256Mi"
    service:
      loadBalancerIP: ''
  openmrs:
    initImage: mariadb:10.3
    image: mekomsolutions/openmrs:b676d7d
    enabled: false
    timezone: "UTC"
    OPENMRS_DB_NAME: openmrs
    OPENMRS_USER: superman
    OPENMRS_PASSWORD: Admin123
    OPENMRS_HOST: openmrs
    OPENMRS_DB_USER: openmrs
    OPENMRS_DB_HOST: mysql
    OPENMRS_DB_PASSWORD: password
    OPENMRS_OWAS_PATH: openmrs_core
    OPENMRS_MODULES_PATH: openmrs_modules
    OPENMRS_CONFIG_PATH: openmrs_config
    OPENMRS_CONFIG_CHECKSUMS_PATH: ""
    resources:
      requests:
        cpu: "1"
        memory: "512Mi"

  postgresql:
    image: postgres:9.6-alpine
    enabled: false
    POSTGRES_HOST: postgres
    POSTGRES_PORT: "5432"
    POSTGRES_PASSWORD: password
    POSTGRES_DB: postgres
    POSTGRES_USER: postgres
    resources:
      requests:
        cpu: "0.5"
        memory: "256Mi"
    nodeSelector:
        role: database
    storage:
      storageClass: mekom-nfs
      accessMode: ReadWriteOnce
      size: 2Gi
      annotations: {}
      nodeAffinity:
        required:
          nodeSelectorTerms:
          - matchExpressions:
            - key: role
              operator: In
              values:
              - database
  proxy:
    image: enyachoke/proxy:5b1f024
    enabled: true
    resources:
      requests:
        cpu: "0.5"
        memory: "100Mi"
    service:
      loadBalancerIP: ''
      port: 80
ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
