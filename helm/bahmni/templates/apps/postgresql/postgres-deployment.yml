{{ if .Values.apps }}{{ if .Values.apps.postgresql }} {{ if .Values.apps.postgresql.enabled }} 
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  replicas: 1
  serviceName: postgres
  selector:
    matchLabels:
      app: postgres
  {{- if ne .Values.isAppliance true }}
  volumeClaimTemplates:
  - metadata:
      name: postgres-database
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 2Gi
  {{- end }}
  template:
    metadata:
      labels:
        app: postgres
    spec:
    {{ if .Values.isAppliance }}
      volumes:
        - name: postgres-database
          persistentVolumeClaim:
            claimName: postgres-pvc
    {{ end }}
      priorityClassName: high-priority
      containers:
        - name: postgres
          image: "{{ .Values.apps.postgresql.image }}"
          resources:
            requests:
              memory: "{{  .Values.apps.postgresql.resources.requests.memory }}"
              cpu: "{{ .Values.apps.postgresql.resources.requests.cpu }}"
          ports:
            - containerPort: 5432
          readinessProbe:
            initialDelaySeconds: 5
            periodSeconds: 2
            timeoutSeconds: 1
            exec:
              command:
                - "sh"
                - "-c"
                - 'PGPASSWORD=$POSTGRES_PASSWORD psql -h localhost --username "$POSTGRES_USER" -d $POSTGRES_DB -c "SELECT 1"'
          livenessProbe:
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            exec:
              command:
                - "sh"
                - "-c"
                - 'PGPASSWORD=$POSTGRES_PASSWORD psql -h localhost --username "$POSTGRES_USER" -d $POSTGRES_DB -c "SELECT 1"'
          volumeMounts:
            - name: postgres-database
              mountPath: "/var/lib/postgresql/data"
              subPath: postgres
          env:
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: postgres-configs
                  key: POSTGRES_DB
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  name: postgres-configs
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: postgres-configs
                  key: POSTGRES_PASSWORD
      {{ if .Values.selectDbHost }}
      {{- with .Values.apps.postgresql.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{ end }}
{{ end }}{{ end }}{{ end }}